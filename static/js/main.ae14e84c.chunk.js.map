{"version":3,"sources":["utils/config.js","utils/near.js","Components/Cover.js","assets/img/5508687.jpg","utils/nftMint.js","Components/Animals/index.js","App.js","reportWebVitals.js","index.js"],"names":["CONTRACT_NAME","process","environment","env","networkId","nodeUrl","contractName","walletUrl","helperUrl","explorerUrl","Error","nearEnv","a","connect","Object","assign","deps","keyStore","keyStores","BrowserLocalStorageKeyStore","near","window","walletConnection","WalletConnection","accountId","getAccountId","contract","Contract","account","viewMethods","changeMethods","login","requestSignIn","logout","signOut","location","reload","console","log","Cover","name","coverImg","style","marginTop","textAlign","className","width","src","alt","height","marginBottom","onClick","variant","defaultProps","gas","BN","attachedDeposit","randNum","Math","floor","random","nft_mint","title","description","media","alert","token_id","metadata","receiver_id","require","providers","JsonRpcProvider","animals","Animals","useState","nftMint","result","class","map","animal","index","href","xmlns","mintandFeed","margin","color","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","nearInitPromise","initializeContract","ReactDOM","render","StrictMode","document","getElementById","catch","error"],"mappings":"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","file":"static/js/main.ae14e84c.chunk.js","sourcesContent":["const CONTRACT_NAME = process.env.CONTRACT_NAME || \"zoohelp.testnet\";\n\nfunction environment(env) {\n  switch (env) {\n    case \"mainnet\":\n      return {\n        networkId: \"mainnet\",\n        nodeUrl: \"https://rpc.mainnet.near.org\",\n        contractName: CONTRACT_NAME,\n        walletUrl: \"https://wallet.near.org\",\n        helperUrl: \"https://helper.mainnet.near.org\",\n        explorerUrl: \"https://explorer.mainnet.near.org\",\n      };\n    case \"testnet\":\n      return {\n        networkId: \"testnet\",\n        nodeUrl: \"https://rpc.testnet.near.org\",\n        contractName: CONTRACT_NAME,\n        walletUrl: \"https://wallet.testnet.near.org\",\n        helperUrl: \"https://helper.testnet.near.org\",\n        explorerUrl: \"https://explorer.testnet.near.org\",\n      };\n    default:\n      throw Error(`Unknown environment '${env}'.`);\n  }\n}\n\nexport default environment;\n","import environment from \"./config\";\nimport { connect, Contract, keyStores, WalletConnection } from \"near-api-js\";\n\nconst nearEnv = environment(\"testnet\");\nconsole.log(nearEnv);\nexport async function initializeContract() {\n  const near = await connect(\n    Object.assign(\n      { deps: { keyStore: new keyStores.BrowserLocalStorageKeyStore() } },\n      nearEnv\n    )\n  );\n  window.walletConnection = new WalletConnection(near);\n  window.accountId = window.walletConnection.getAccountId();\n  window.contract = new Contract(\n    window.walletConnection.account(),\n    nearEnv.contractName,\n    {\n      viewMethods: [\"nft_tokens_for_owner\"],\n      changeMethods: [\"nft_mint\"],\n    }\n  );\n}\n// login function\nexport function login() {\n  window.walletConnection.requestSignIn(nearEnv.contractName);\n}\n\n// logout\nexport function logout() {\n  window.walletConnection.signOut();\n  window.location.reload();\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Cover = ({ name, login, coverImg }) => {\n  if ((name, login, coverImg)) {\n    return (\n      <div style={{ marginTop: \"30px\", textAlign: \"center\" }}>\n        <h1> NEAR Spring Challenge #6</h1>\n        <h4 style={{ marginTop: \"30px\" }}>\n          Ukrainian zoos are in severe need of help now and will be in need\n          after the war ends. There are no visitors in the zoos, which results\n          in no budgeting.\n        </h4>\n        <h4 style={{ marginTop: \"25px\" }}>\n          You need to create an NFT project which will aid in attracting funds\n          that will be allocated to buy food for animals or help zoos restore\n          their work after the war is over.\n        </h4>\n        <div\n          className=\"d-flex justify-content-center text-center\"\n          style={{ marginTop: \"20px\" }}\n        >\n          <div\n            className=\" ratio ratio-1x1 mx-auto mb-2\"\n            style={{ textAlign: \"center\", width: \"300\" }}\n          >\n            <img src={coverImg} alt=\"\" style={{ height: \"250px\" }} />\n          </div>\n          <h1 style={{ marginTop: \"20px\" }}>{name}</h1>\n          <p style={{ marginTop: \"10px\", marginBottom: \"10px\" }}>\n            Please connect your wallet to continue.\n          </p>\n          <button onClick={login} variant=\"outline-light\">\n            Connect Wallet\n          </button>\n        </div>\n      </div>\n    );\n  }\n  return null;\n};\n\nCover.propTypes = {\n  name: PropTypes.string,\n};\n\nCover.defaultProps = {\n  name: \"\",\n};\n\nexport default Cover;\n","export default __webpack_public_path__ + \"static/media/5508687.c2576df9.jpg\";","import BN from \"bn.js\";\nconst gas = new BN(\"300000000000000\");\nconst attachedDeposit = new BN(\"3000000000000000000000000\");\nlet randNum = Math.floor(Math.random() * 100000000 + 1);\nexport function nft_mint(name, title, description, media) {\n  alert(title);\n  return window.contract.nft_mint(\n    {\n      token_id: `${name}-${randNum}-nft-Zoo`,\n      metadata: {\n        title,\n        description,\n        media,\n      },\n      receiver_id: name,\n    },\n    gas,\n    attachedDeposit\n  );\n}\nexport function nft_tokens_for_owner(name) {\n  return window.contract.nft_tokens_for_owner({ account_id: name });\n}\n","import React, { useEffect, useState } from \"react\";\nimport { nft_mint, nft_tokens_for_owner } from \"../../utils/nftMint\";\nimport \"./Animal.css\";\nconst { providers } = require(\"near-api-js\");\nconst provider = new providers.JsonRpcProvider(\n  \"https://archival-rpc.testnet.near.org\"\n);\nconst animals = [\n  {\n    name: \"Raccoon\",\n    title: \"Feed Raccoon\",\n    description: \"Help the Raccoon to Survive\",\n    media:\n      \"https://bafybeih24ll5x67hmottlksvjglbr5ybxp37cx3t6vlp2vyytsn5ehd2ie.ipfs.dweb.link/\",\n  },\n  {\n    name: \"Bear\",\n    title: \"Feed Bear\",\n    description: \"Help the Bear to Survive\",\n    media:\n      \"https://bafybeidiu56l44kszq3uyshm3o74e23vn4si2ytehwxbrtff3kwut23ple.ipfs.dweb.link/\",\n  },\n  {\n    name: \"Monkey\",\n    title: \"Feed Monkey\",\n    description: \"Help the Monkey to Survive\",\n    media:\n      \"https://bafybeifs6jwdlpkka4f36sdweipux7z5w5dpefp3fgehdcgvzbpkhnhyki.ipfs.dweb.link/\",\n  },\n  {\n    name: \"Elephant\",\n    title: \"Feed Elephant\",\n    description: \"Help the Elephant to Survive\",\n    media:\n      \"https://bafybeib7343od7lhlzel3xunmqo67v7qa42edtijkofm46jofpnak7w2sy.ipfs.dweb.link/\",\n  },\n  {\n    name: \"Dog\",\n    title: \"Feed Dog\",\n    description: \"Help the Dog to Survive\",\n    media:\n      \"https://bafybeifc2ozavqtzepx5dolxor4xdzfreho6opqitv6vdgd2hwzn4f54ru.ipfs.dweb.link/\",\n  },\n  {\n    name: \"Lion\",\n    title: \"Feed Lion\",\n    description: \"Help the Lion to Survive\",\n    media:\n      \"https://bafybeicnujgoykipu67liqtyw5lkos2pkfymyfccjctwcb6b2xkywkxfay.ipfs.dweb.link/\",\n  },\n];\nconst Animals = ({ accountId, logout }) => {\n  const [nftMint, setNftMnt] = useState(false);\n\n  async function mintandFeed(name, title, description, media) {\n    const result = await nft_mint(name, title, description, media);\n    console.log({ result });\n  }\n  // useEffect(() => {\n  //   const queryString = window.location.search;\n  //   const urlParams = new URLSearchParams(queryString);\n  //   const transactionHashes = urlParams.get(\"transactionHashes\");\n  //   console.log(transactionHashes);\n\n  //   async function getState(txHash, accountId) {\n  //     const result = await provider.txStatus(txHash, accountId);\n  //     console.log(\"Result: \", result);\n  //     if (result) {\n  //       setNftMnt(true);\n  //     }\n  //   }\n  //   getState(transactionHashes, accountId);\n  // }, []);\n  return (\n    <div>\n      {nftMint ? (\n        <h2 className=\"main-head\">\n          Thanks for your generousity &#129505; <br /> Let's help other animal{\" \"}\n        </h2>\n      ) : (\n        <h2 className=\"main-head\">Animals in Need</h2>\n      )}\n\n      <ul class=\"cards\">\n        {animals.map((animal, index) => (\n          <li key={index}>\n            <a href=\"#\" class=\"card\">\n              <img src={animal.media} class=\"card__image\" alt=\"\" />\n              <div class=\"card__overlay\">\n                <div class=\"card__header\">\n                  <svg class=\"card__arc\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path />\n                  </svg>\n                  <img class=\"card__thumb\" src={animal.media} alt=\"\" />\n                  <div class=\"card__header-text\">\n                    <h3 class=\"card__title\">{animal.name}</h3>\n                    <span class=\"card__status\">{animal.description}</span>\n                    <button\n                      class=\"card__button\"\n                      onClick={() =>\n                        mintandFeed(\n                          accountId,\n                          animal.title,\n                          animal.description,\n                          animal.media\n                        )\n                      }\n                    >\n                      {\" \"}\n                      Mint & Feed Me{\" \"}\n                    </button>\n                  </div>\n                </div>\n                <p class=\"card__description\">\n                  When you mint your nft, the donation with 3 Near will sent to\n                  feed the Animal\n                </p>\n              </div>\n            </a>\n          </li>\n        ))}\n      </ul>\n      <p\n        style={{ margin: \"30px\", color: \"#000\" }}\n        className={`{nftMint? \"\":hidden}`}\n      >\n        <a href={\"https://wallet.testnet.near.org/\"}>\n          Always, you can check your NFTs from your wallet in the collectibles\n          tab!\n        </a>\n      </p>\n    </div>\n  );\n};\nexport default Animals;\n","import React from \"react\";\n\nimport { login, logout } from \"./utils/near\";\n\nimport Cover from \"./Components/Cover\";\nimport coverImg from \"./assets/img/5508687.jpg\";\nimport Animals from \"./Components/Animals\";\nimport \"./App.css\";\n\nconst App = () => {\n  const account = window.walletConnection.account();\n\n  return (\n    <>\n      {account.accountId ? (\n        <div className=\"container \">\n          <div>\n            <h1 style={{ marginBottom: \"25px\" }}>\n              hello {account.accountId} !\n            </h1>\n            <button onClick={logout}> logout </button>\n          </div>\n\n          <Animals logout={logout} accountId={account.accountId} />\n        </div>\n      ) : (\n        <Cover\n          name=\"Let's help them and Mint Your NFT\"\n          login={login}\n          coverImg={coverImg}\n        />\n      )}\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { initializeContract } from \"./utils/near\";\n\nwindow.nearInitPromise = initializeContract()\n  .then(() => {\n    ReactDOM.render(\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>,\n      document.getElementById(\"root\")\n    );\n  })\n  .catch(console.error);\n\nreportWebVitals();\n"],"sourceRoot":""}